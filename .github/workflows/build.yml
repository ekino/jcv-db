name: Build branch
on:
  schedule:
    - cron: "0 5 * * 1" # every monday at 5 am
  push:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    services:
      postgres:
        image: postgres:11.1
        env:
          POSTGRES_DB: postgres-test
          POSTGRES_USER: postgres-user
          POSTGRES_PASSWORD: postgres-password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      mssql:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Express
          SA_PASSWORD: A_Str0ng_Required_Password
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "A_Str0ng_Required_Password" -Q 'SELECT 1' || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ROOT_PASSWORD: mysql-password
          MYSQL_DATABASE: mysql-text
          MYSQL_USER: mysql-user
          MYSQL_PASSWORD: mysql-password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u mysql-user --password=mysql-password"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      mongodb:
        image: mongo:3.1.5
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand({ ping: 1 })' | mongo localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      cassandra:
        image: cassandra
        ports:
          - 9042:9042
        env:
          CASSANDRA_DC: local
          CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        options:
          --health-cmd "cqlsh localhost 9042 -u cassandra -p cassandra -e 'describe cluster'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - uses: actions/checkout@v2
      - name: Init database data for PostgreSQL
        run: PGPASSWORD=postgres-password psql -h localhost -p 5432 -U postgres-user -f docker/postgresql/setup.sql postgres-test

      - name: Init database data for MySQL
        run: |
          mysql --host 127.0.0.1 --port 3306 -u root --password=mysql-password --database=mysql-text < docker/mysql/setup.sql
      - name: Init database data for MSSQL
        run: sqlcmd -S localhost -U sa -P A_Str0ng_Required_Password -d master -i docker/mssql/setup.sql
      - name: Init database data for Cassandra
        run: |
          docker cp docker/cassandra/setup.cql ${{ job.services.cassandra.id }}:/setup.cql
          docker exec ${{ job.services.cassandra.id }} cqlsh localhost 9042 -f setup.cql
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 11
          cache: "gradle"
      - name: Build
        run: ./gradlew build
